on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3.12.0
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Update Gradle Wrapper
        run: |
          chmod +x ./gradlew
          ./gradlew wrapper --gradle-version 6.7.1

      - name: Run Gradle Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew test  # Run unit tests

      - name: Check Gradle Version
        run: ./gradlew --version

       # Instalar Jmeter
      - name: instalacion jmeter
        run: |
          mkdir $GITHUB_WORKSPACE/test_report
          chmod +x $GITHUB_WORKSPACE/test_report
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.5.zip
          unzip apache-jmeter-5.5.zip
          cd apache-jmeter-5.5/bin
          ./jmeter -v
          pwd

      - name: instalar plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.5
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip
          
      - name: Ejecutar scripts jmx 
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.5/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
      
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2.2.4
        with:
         name: jmeter_test_results
         path: test_report
      
      # Verificar si el archivo 'Postman.json' existe y, si no, crearlo
      - name: Verificar y crear Postman.json
        run: |
          if [ ! -f "Postman.json" ]; then
            echo '{"your_collection_data_here"}' > Postman.json
          fi

      # Pruebas con Postman
      - name: Postman
        uses: matt-ball/newman-action@master
        with:
          collection: 'Postman.json'
          reporters: '["json"]'

      # Dejar artifact con resultados de Postman en Action
      - uses: actions/upload-artifact@v1
        with:
          name: postman-test-results
          path: newman/

