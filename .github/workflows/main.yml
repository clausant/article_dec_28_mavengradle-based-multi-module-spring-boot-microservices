on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Update Gradle Wrapper
        run: |
          chmod +x ./gradlew
          ./gradlew wrapper --gradle-version 6.7.1

      - name: Run Gradle Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew test

      - name: Check Gradle Version
        run: ./gradlew --version

      - name: Install JMeter
        run: |
          mkdir $GITHUB_WORKSPACE/test_report
          chmod +x $GITHUB_WORKSPACE/test_report
          java -version
          wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.5.zip
          unzip apache-jmeter-5.5.zip
          cd apache-jmeter-5.5/bin
          ./jmeter -v
          pwd

      - name: Install plugins
        run: |
          cd $GITHUB_WORKSPACE/apache-jmeter-5.5
          wget -q --no-check-certificate https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip  -P .
          unzip -o jpgc-dummy-0.4.zip  && rm jpgc-dummy-0.4.zip
          
      - name: Run JMeter scripts
        run: |
         cd $GITHUB_WORKSPACE
         for i in $( ls -A1 *.jmx); do
            cd $GITHUB_WORKSPACE/apache-jmeter-5.5/bin
            mkdir $GITHUB_WORKSPACE/test_report/${i%.jmx}
            ./jmeter -n -t $GITHUB_WORKSPACE/$i  -l $GITHUB_WORKSPACE/${i%.jmx}.jtl -e -o $GITHUB_WORKSPACE/test_report/${i%.jmx}
         done
      
      - name: Upload JMeter Test Results
        uses: actions/upload-artifact@v2
        with:
         name: jmeter_test_results
         path: test_report

      # Test with Postman (Commented out)
      #- name: Postman
      #  uses: matt-ball/newman-action@master
      #  with:
      #    collection: Copy.postman_collection.json
      #    reporters: '["json"]'

      # Artifact for Postman Test Results (Commented out)
      #- uses: actions/upload-artifact@v1
      #  with:
      #    name: postman-test-results
      #    path: newman/
     
      # Docker Hub login with credentials.
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      
      - name: Docker Build
        run: |
          docker tag c6b84b685f35f1a5d63661f5d4aa662ad9b7ee4f4b8c394c022f25023c907b65 clausant/springboot-servicea:latest
          docker tag c6b84b685f35f1a5d63661f5d4aa662ad9b7ee4f4b8c394c022f25023c907b65 clausant/springboot-serviceb:latest
          docker tag c6b84b685f35f1a5d63661f5d4aa662ad9b7ee4f4b8c394c022f25023c907b65 clausant/springboot-servicec:latest
  
      - name: Push tagged images to Docker Hub
        run: |
          docker push clausant/springboot-servicea:latest
          docker push clausant/springboot-serviceb:latest
          docker push clausant/springboot-servicec:latest

